
var IM_BOARD = [0x24,0x24,0x24,0x24,0xFF,0xFF,0x24,0x24,0x24,0x24,0xFF,0xFF,0x24,0x24,0x24,0x24];

var IM_WIPERS = {		
	board : [
	[0xFF,0xFF,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0x81,0xFF,0xFF],
	[0x42,0x42,0xFF,0xFF,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0xFF,0xFF,0x42,0x42],
	[0x18,0x18,0x18,0x18,0x18,0x18,0xFF,0xFF,0xFF,0xFF,0x18,0x18,0x18,0x18,0x18,0x18]],
	
	vertical : [
	[0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01],
	[0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02],
	[0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04],
	[0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08],
	[0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10],
	[0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20],
	[0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40],
	[0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80]],
	
	horizontal : [
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
	[0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]],
	
	diagonal : [
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02,0x04,0x04],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02,0x04,0x04,0x08,0x08],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02,0x04,0x04,0x08,0x08,0x10,0x10],
	[0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x02,0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20],
	[0x00,0x00,0x01,0x01,0x02,0x02,0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x40,0x40],
	[0x01,0x01,0x02,0x02,0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x40,0x40,0x80,0x80],
	[0x02,0x02,0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x40,0x40,0x80,0x80,0x00,0x00],
	[0x04,0x04,0x08,0x08,0x10,0x10,0x20,0x20,0x40,0x40,0x80,0x80,0x00,0x00,0x00,0x00],
	[0x08,0x08,0x10,0x10,0x20,0x20,0x40,0x40,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x10,0x10,0x20,0x20,0x40,0x40,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x20,0x20,0x40,0x40,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x40,0x40,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]]
};

var IM_COMPUTER_PLAYERS = {
    mrRandom : [0x00,0x00,0x06,0x00,0x09,0x00,0xD1,0x00,0xD1,0x00,0x01,0x00,0x06,0x00,0x00,0x00],
    oneder :   [0x00,0x00,0x80,0x80,0xC0,0xC0,0xFF,0xFF,0xFF,0xFF,0xC6,0xC6,0x86,0x86,0x00,0x00],
    catWoman : [0x0E,0x0E,0x05,0x05,0x2E,0x0E,0x20,0x00,0xE0,0x00,0x20,0x09,0x20,0x09,0x00,0x06],
};

var IM_SPLASH_SCREENS = {
	tic : [[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x0F,0x00,0x01,0x00],
	       [0x00,0x00,0x00,0x09,0x00,0x0F,0x00,0x09,0x00,0x00,0x01,0x00,0x0F,0x00,0x01,0x00],
	       [0x00,0x00,0x00,0x09,0xA0,0xAF,0xA0,0xA9,0xE0,0xE0,0x01,0x00,0x0F,0x00,0x01,0x00]],

	tac : [[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x0F,0x0F,0x01,0x01],
	       [0x0E,0x00,0x05,0x00,0x05,0x00,0x0E,0x00,0x00,0x00,0x01,0x01,0x0F,0x0F,0x01,0x01],
	       [0x0E,0x00,0x05,0x00,0x05,0xA0,0x0E,0xA0,0x00,0xE0,0x01,0x01,0x0F,0x0F,0x01,0x01]],

	toe : [[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x07,0x00,0x01,0x00,0x00],
	       [0x07,0x07,0x05,0x05,0x07,0x07,0x00,0x00,0x00,0x01,0x00,0x07,0x00,0x01,0x00,0x00],
           [0x07,0x07,0x8D,0x05,0xAF,0x07,0xA8,0x00,0xF8,0x01,0x00,0x07,0x00,0x01,0x00,0x00]]
};

var IM_GAME_CELLS = [
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x03,0x03],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x03,0x03,0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x18,0x18],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x18,0x18,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],
	[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0,0xC0],
	[0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00],
	[0xC0,0xC0,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]
];

var IM_SOLID_COLORS = [
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF],
    [0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00], 
    [0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF]
];

var TIMING = {
		splashLetters : 250,
		splashWord : 2000
}

var MACHINE = {	
		
	tic_T   : {
		ENTER : ['setButtonColor',2, 'and', 'drawImage', IM_SPLASH_SCREENS.tic[0]],
		TIMEOUT : [TIMING.splashLetters, 'tic_TI']
	},
	tic_TI  : {
		ENTER : ['drawImage', IM_SPLASH_SCREENS.tic[1]],
		TIMEOUT : [TIMING.splashLetters, 'tic_TIC']
	},
	tic_TIC : {
		ENTER : ['drawImage', IM_SPLASH_SCREENS.tic[2]],
		TIMEOUT : [TIMING.splashWord, 'tac_T']
	},
	
	tac_T   : {
		ENTER : ['drawImage', IM_SPLASH_SCREENS.tac[0]],
		TIMEOUT : [TIMING.splashLetters, 'tac_TA']
	},
	tac_TA  : {
		ENTER : ['drawImage', IM_SPLASH_SCREENS.tac[1]],
		TIMEOUT : [TIMING.splashLetters, 'tac_TAC']
	},
	tac_TAC : {
		ENTER : ['drawImage', IM_SPLASH_SCREENS.tac[2]],
		TIMEOUT : [TIMING.splashWord, 'toe_T']
	},
	
	toe_T   : {
		ENTER : ['drawImage', IM_SPLASH_SCREENS.toe[0]],
		TIMEOUT : [TIMING.splashLetters, 'toe_TO']
	},
	toe_TO  : {
		ENTER : ['drawImage', IM_SPLASH_SCREENS.toe[1]],
		TIMEOUT : [TIMING.splashLetters, 'toe_TOE']
	},
	toe_TOE : {
		ENTER : ['drawImage', IM_SPLASH_SCREENS.toe[2]],
		TIMEOUT : [TIMING.splashWord, 'tic_T']
	}	
	
	
}



var cursor;
var board;
var cpu;

var imageBuffer = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];

function randomInt(high) {
	return Math.floor(Math.random() * (high));
}


MACHINE.log = function(value) {
	console.log(value);
}

MACHINE.drawBoard = function() {
	imageBuffer = IM_BOARD.slice();
	for(var x=0;x<9;++x) {
		if(board[x]!=0) {
			for(var y=0;y<16;++y) {
				imageBuffer[y] = imageBuffer[y] | IM_GAME_CELLS[x][y] & IM_SOLID_COLORS[board[x]][y]; 
			}
		}
	}
	hardware.drawImage(imageBuffer);	
}

MACHINE.newGame = function() {
	board = [0,0,0,  0,0,0,  0,0,0];
	cursor = 8; // First advance ... back to 0
	cpu = randomInt(3);
}

MACHINE.setCellAtCursor = function(color) {
	board[cursor] = color;
	return getBoardImage();
}

MACHINE.advanceCursor = function() {
	for(var x=0;x<9;++x) {
		++cursor;
		if(cursor==9) {
			cursor=0;
		}
		if(board[cursor]==0) {
			return;
		}
	}
}

var WINS = [
	[0,1,2],[3,4,5],[6,7,8],        
	[0,3,6],[1,4,7],[2,5,8],
	[0,4,8],[2,4,6]
];

MACHINE.getGameState = function() {	
	for(var x=0;x<WINS.length;++x) {
		if(WINS[x][0]!=0 && WINS[x][0]==WINS[x][1] && WINS[x][0]==WINS[x][2]) {
			if(WINS[x][0] == 2) {
				runner.handleEvent('CPU');
			} else {
				runner.handleEvent('HUMAN');
			}
		}
	}	
	for(var x=0;x<9;++x) {
		if(board[x]==0) {
			runner.handleEvent('PLAY');
		}
	}	
	runner.handleEvent('TIE');	
}

MACHINE.getCPUMove = function() {
	// TODO this is only Mr. Random
	var x = randomInt(8)+1;
	do {
		MACHINE.advanceCursor();
		--x;
	} while(x>0);
}

MACHINE.setButtonColor = function(value) {
	hardware.setButtonColor(value);
}

MACHINE.drawImage = function(image) {
	imageBuffer = image.slice(); // Make a copy
	hardware.drawImage(imageBuffer);
}

MACHINE.orImageBuffer = function(image, color) {
	for(var x=0;x<16;++x) {
		imageBuffer[x] = imageBuffer[x] | image[x] & IM_SOLID_COLORS[color][x];
	}
	hardware.drawImage(imageBuffer);
}

MACHINE.andNotImageBuffer = function(image) {
	for(var x=0;x<16;++x) {
		imageBuffer[x] = imageBuffer[x] & ~image[x];
	}
	hardware.drawImage(imageBuffer);
}




var runner = require('./FSMRunner.js');

var hardware = require('./Hardware.js');

function buttonEventListener(event) {
	runner.handleEvent(event);
}

hardware.init(buttonEventListener, function() {
	
	//hardware.drawImage(IM_SOLID_COLORS[0]);
	runner.init(MACHINE,'tic_T');	
});





